{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchFriends.js","Components/Scroll.js","Components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","style","width","outerHeight","src","alt","CardList","robots","map","user","i","Serach","searchChange","type","placeholder","onChange","Scroll","props","overflowY","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","event","search","target","value","fetch","then","response","json","users","filterBot","filter","robot","toLowerCase","includes","length","SearchFriends","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAiBeA,EAfJ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,GAAGC,EAAS,EAATA,MAErB,OACA,sBAAKC,UAAU,mDAAmDC,MAAO,CAACC,MAAM,QAASC,YAAY,SAArG,UAEA,qBAAKC,IAAG,+BAA0BN,EAA1B,YAAwCO,IAAI,YAEpD,gCACA,6BAAKR,IACL,4BAAIE,WCceO,EAtBJ,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAKd,OACA,8BAEKA,EAAOC,KAAI,SAACC,EAAKC,GAEb,OACI,cAAC,EAAD,CAEAZ,GAAIS,EAAOG,GAAGZ,GACdD,KAAMU,EAAOG,GAAGb,KAChBE,MAAOQ,EAAOG,GAAGX,OAHZW,SCLNC,EARD,SAAC,GACd,IADeC,EAChB,EADgBA,aAEhB,OACA,qBAAKZ,UAAU,MAAf,SACA,uBAAOA,UAAU,mCAAmCa,KAAK,SAASC,YAAY,cAAcC,SAAUH,OCIvFI,G,MARF,SAACC,GAEd,OACI,qBAAKhB,MAAO,CAACiB,UAAU,SAAUC,OAAO,SAAxC,SACKF,EAAMG,aCmBAC,E,kDArBf,WAAYJ,GACX,IAAD,8BACA,cAAMA,IACDK,MAAM,CAEPC,UAAU,GAJd,E,8DAQkBC,EAAMC,GACpBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAG9B,OAAIG,KAAKJ,MAAMC,SACR,yDAGAG,KAAKT,MAAMG,a,GAnBSQ,aCmDRC,E,kDA7Cf,aAAc,IAAD,8BACT,gBAYJjB,aAAa,SAACkB,GACV,EAAKH,SAAS,CAACI,OAAOD,EAAME,OAAOC,SAZnC,EAAKX,MAAM,CACPf,OAAQ,GACRwB,OAAQ,IAJH,E,gEAQO,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACpB,OAAO+B,S,+BAO9B,IAAD,EACkBZ,KAAKJ,MAApBS,EADH,EACGA,OAAOxB,EADV,EACUA,OACRgC,EAAWhC,EAAOiC,QAAO,SAAAC,GAE3B,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASZ,EAAOW,kBAGpD,OAAQnC,EAAOqC,OAMX,sBAAK5C,UAAU,KAAf,UACA,gDACA,cAAC6C,EAAD,CAAejC,aAAcc,KAAKd,eAClC,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAUL,OAAQgC,WAVtB,6C,GA5BUX,aCMHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACF,cAAC,EAAD,MAEEC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b0a964cd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card=({name,id,email})=>{\r\n\r\nreturn(\r\n<div className=' tc bg-light-green dib br3 ma2 grow bw2 shadow-5' style={{width:'210px', outerHeight:'150px'}}>\r\n\r\n<img src={`https://robohash.org/${id}?200x200`} alt='Nothing' /> \r\n\r\n<div>\r\n<h2>{name}</h2>\r\n<p>{email}</p>\r\n\r\n</div>\r\n</div>\r\n);\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList=({robots})=>{\r\n    \r\n//    if(true){\r\n//        throw new Error(\"Noooooo!\");\r\n//    }\r\n   return (\r\n   <div>\r\n    {\r\n        robots.map((user,i)=>{\r\n            \r\n            return (\r\n                <Card \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n                />\r\n                );\r\n            })\r\n        }\r\n        </div>\r\n    )} \r\n    export default CardList;","import React from 'react';\r\n\r\nconst Serach= ({searchChange})=>\r\n{\r\nreturn(\r\n<div className='pa2'>\r\n<input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='Search Here' onChange={searchChange} />\r\n</div>\r\n\r\n);}\r\nexport default Serach;","import React from \"react\";\r\n\r\nconst Scroll=(props)=>\r\n{\r\nreturn(\r\n    <div style={{overflowY:'scroll', height:'800px'}}>\r\n        {props.children}\r\n    </div>\r\n);\r\n};\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component\r\n{\r\nconstructor(props)\r\n{\r\nsuper(props);\r\nthis.state={\r\n\r\n    hasError: false\r\n }\r\n}\r\n\r\ncomponentDidCatch(error,info){\r\n    this.setState({ hasError: true })\r\n}\r\nrender(){\r\nif (this.state.hasError){\r\nreturn <h1>Ooops. That is not good</h1>\r\n}\r\n\r\nreturn this.props.children;\r\n} \r\n\r\n}\r\nexport default ErrorBoundry;","import React,{Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchFriends from '../Components/SearchFriends';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBounrey from '../Components/ErrorBoundry'\r\nclass App extends Component\r\n{\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            robots: [],\r\n            search: ''\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>response.json())\r\n        .then(users=>this.setState({robots:users}));\r\n    }\r\n    searchChange=(event)=>{\r\n        this.setState({search:event.target.value});\r\n    }\r\n    \r\n    \r\n    render(){ \r\n        const {search,robots}=this.state;\r\n        const filterBot= robots.filter(robot=>{\r\n            \r\n            return robot.name.toLowerCase().includes(search.toLowerCase());\r\n            \r\n        });  \r\n        return !robots.length?\r\n        <h1>Loading</h1>:\r\n        \r\n        (\r\n            \r\n            \r\n            <div className='tc'>\r\n            <h1>My Robofriends</h1>\r\n            <SearchFriends searchChange={this.searchChange}/>\r\n            <Scroll>\r\n            <ErrorBounrey>\r\n            <CardList robots={filterBot}/>\r\n            </ErrorBounrey>\r\n            </Scroll>\r\n            </div>\r\n            );\r\n            \r\n        }\r\n        \r\n    }\r\n    export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport App from './containers/App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n<App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}